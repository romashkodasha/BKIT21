import os

import telebot
from telebot import types

import config
from dbworker import *
import random

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
bot = telebot.TeleBot(config.TOKEN)

# –ø—É—Ç—å –∫ —Ç–µ–∫—É—â–µ–º—É –∫–∞—Ç–∞–ª–æ–≥—É
cur_path = os.path.dirname(os.path.abspath(__file__))

def find_path(a, b, c):
    if a=="–î–ª–∏–Ω–Ω—ã–µ": res='0'
    else: res='1'
    if b=="–Ø—Ä–∫–∏–µ": res+='0'
    else: res+='1'
    if c=="–° –¥–∏–∑–∞–π–Ω–æ–º": res+='0'
    else: res+='1'
    path = "C:/Users/ASUS/PycharmProjects/Lab5/%s"%res
    return path


@bot.message_handler(commands=["start"])
def start(message):
    markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    ans = "–î–∞–∞"
    markup.add(ans)
    bot.send_message(message.chat.id,"–ô–æ—É! –Ø –±–æ—Ç by d_romashhh, –¥–∞–≤–∞–π –ø–æ—Å–æ–≤–µ—Ç—É—é —Ç–µ–±–µüíÖ –¢—ã –≥–æ—Ç–æ–≤–∞?",reply_markup=markup)
    set(make_key(message.chat.id, config.CURRENT_STATE),config.States.STATE_FIRST.value)


@bot.message_handler(commands=["restart"])
def start(message):
    bot.send_message(message.chat.id,"–ü—Ä–æ–∏–∑–æ—à–µ–ª –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫")
    set(make_key(message.chat.id, config.CURRENT_STATE),config.States.STATE_FIRST.value)

@bot.message_handler(func=lambda message:get(make_key(message.chat.id,config.CURRENT_STATE))==config.States.STATE_FIRST.value)
def state_first(message): #message- —Ö—Ä–∞–Ω–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤–≤–µ–¥–µ–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    text=message.text
    markup=types.ReplyKeyboardMarkup(row_width=2,resize_keyboard=True) #—Ç–æ —á—Ç–æ –≤—ã–≤–æ–¥—è—Ç—Å—è –∫–Ω–æ–ø–∫–∏
    but1=types.KeyboardButton("–ö–æ—Ä–æ—Ç–∫–∏–µ")
    but2 = types.KeyboardButton("–î–ª–∏–Ω–Ω—ã–µ")
    markup.add(but1,but2)
    bot.send_message(message.chat.id,"–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –¥–ª–∏–Ω—É –Ω–æ–≥—Ç–µ–πüíÉ",reply_markup=markup)
    #markup = types.ReplyKeyboardRemove(selective=False)
    #bot.send_message(message.chat.id, "–ü–µ—Ä–≤—ã–π –≤—ã–≤–æ–¥–∏–º—ã–π —Ç–µ–∫—Å—Ç", reply_markup=markup)
    set(make_key(message.chat.id, config.CURRENT_STATE), config.States.STATE_SECOND.value)#–ø–µ—Ä–µ—Ö–æ–¥ –≤ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ –∫–ª—é—á—É

@bot.message_handler(func=lambda message:get(make_key(message.chat.id,config.CURRENT_STATE))==config.States.STATE_SECOND.value)
def state_second(message): #message- —Ö—Ä–∞–Ω–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤–≤–µ–¥–µ–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    text=message.text
    set(make_key(message.chat.id, config.States.STATE_FIRST), text)
    markup=types.ReplyKeyboardMarkup(row_width=2,resize_keyboard=True) #—Ç–æ —á—Ç–æ –≤—ã–≤–æ–¥—è—Ç—Å—è –∫–Ω–æ–ø–∫–∏
    but1=types.KeyboardButton("–ù—é–¥–æ–≤—ã–µ")
    but2 = types.KeyboardButton("–Ø—Ä–∫–∏–µ")
    markup.add(but1,but2)
    bot.send_message(message.chat.id,"–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—åüòé",reply_markup=markup)
    #markup = types.ReplyKeyboardRemove(selective=False)
    #bot.send_message(message.chat.id, "–ü—Ä", reply_markup=markup)
    set(make_key(message.chat.id, config.CURRENT_STATE), config.States.STATE_THIRD.value)


@bot.message_handler(func=lambda message:get(make_key(message.chat.id,config.CURRENT_STATE))==config.States.STATE_THIRD.value)
def state_third(message): #message- —Ö—Ä–∞–Ω–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤–≤–µ–¥–µ–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    text=message.text
    set(make_key(message.chat.id, config.States.STATE_SECOND), text)
    markup=types.ReplyKeyboardMarkup(row_width=2,resize_keyboard=True) #—Ç–æ —á—Ç–æ –≤—ã–≤–æ–¥—è—Ç—Å—è –∫–Ω–æ–ø–∫–∏
    but1=types.KeyboardButton("–° –¥–∏–∑–∞–π–Ω–æ–º")
    but2 = types.KeyboardButton("–ë–µ–∑ –¥–∏–∑–∞–π–Ω–∞")
    markup.add(but1,but2)
    bot.send_message(message.chat.id,"–ò –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å‚ù§",reply_markup=markup)
    set(make_key(message.chat.id, config.CURRENT_STATE), config.States.STATE_OPERATION.value)


@bot.message_handler(func=lambda message:get(make_key(message.chat.id,config.CURRENT_STATE))==config.States.STATE_OPERATION.value)
def state_operation(message): #message- —Ö—Ä–∞–Ω–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤–≤–µ–¥–µ–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    design=message.text
    length=get(make_key(message.chat.id,config.States.STATE_FIRST))
    bright = get(make_key(message.chat.id, config.States.STATE_SECOND))
    path=find_path(length, bright, design)
    photo = open(path+"/" + random.choice(os.listdir(path)), 'rb')
    markup = types.ReplyKeyboardRemove(selective=False)
    bot.send_photo(message.chat.id, photo)
    bot.send_message(message.chat.id, "–ù–∞–¥–µ—é—Å—å —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—åüåº",reply_markup=markup)
    set(make_key(message.chat.id, config.CURRENT_STATE), config.States.STATE_FIRST.value)
    markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    ans = "–î–∞–∞"
    markup.add(ans)
    bot.send_message(message.chat.id, "–ô–æ—É! –Ø –±–æ—Ç by d_romashhh, –¥–∞–≤–∞–π –ø–æ—Å–æ–≤–µ—Ç—É—é —Ç–µ–±–µüíÖ –¢—ã –≥–æ—Ç–æ–≤–∞?", reply_markup=markup)


if __name__ == '__main__':
    bot.infinity_polling() #–∑–∞—Ü–∏–∫–ª–∏–≤–∞–µ—Ç –±–æ—Ç –∏ –≤—ã–∑—ã–≤–∞–µ—Ç –µ–≥–æ –æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è